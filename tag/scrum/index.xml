<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scrum | Mai Le</title>
    <link>https://lephanthuymai.github.io/tag/scrum/</link>
      <atom:link href="https://lephanthuymai.github.io/tag/scrum/index.xml" rel="self" type="application/rss+xml" />
    <description>Scrum</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â©2021 by Mai Le.</copyright><lastBuildDate>Fri, 08 Jan 2021 14:36:15 +0700</lastBuildDate>
    <image>
      <url>https://lephanthuymai.github.io/images/icon_huecf101d77c4d50fee89da6355e975757_514918_512x512_fill_lanczos_center_2.png</url>
      <title>Scrum</title>
      <link>https://lephanthuymai.github.io/tag/scrum/</link>
    </image>
    
    <item>
      <title>Surviving a 7-Scrum-Team Project</title>
      <link>https://lephanthuymai.github.io/post/surving-a-7-scrum-team-project/</link>
      <pubDate>Fri, 08 Jan 2021 14:36:15 +0700</pubDate>
      <guid>https://lephanthuymai.github.io/post/surving-a-7-scrum-team-project/</guid>
      <description>&lt;p&gt;I was a Director of Delivery in an outsourcing firm when we got an opportunity to work with this client, let&amp;rsquo;s call them Company H, they would like to build a new generation restaurant management system as a software-as-a-service platform. My role was both Account Manager and Program Manager for this client, I gave the team&amp;rsquo;s overall direction, resolved cross-team impediments, reported the overall status and risks to the PMO and Steering Committee.&lt;/p&gt;
&lt;p&gt;The project started with 2 Scrum Teams then eventually grew to 7 Scrum Teams working on a &lt;strong&gt;single&lt;/strong&gt; product backlog.&lt;/p&gt;
&lt;p&gt;Just like other programs with multiple Scrum teams working on the same product backlog, we experienced the great challenge of dependency and integration hell, on top of that, we also got distributed team situation in which the teams were 14 hours difference from the PO&amp;rsquo;s timezone and the outsourcing nature (tightly bound by contractual terms and sometimes lack of trust). In order to make our life easier, we chose to apply &lt;a href=&#34;https://www.scrum.org/scaled-professional-scrum-nexus-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nexus&lt;/a&gt; framework with adaptations to ensure multiple team&amp;rsquo;s works resulted in an integrated product. The model was not perfect but it was the best we could do at the time considering our constraints.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Nexus%20Poster.png&#34; alt=&#34;Nexus Poster&#34;&gt;&lt;/p&gt;
&lt;p&gt;Each of our Scrum Team was composed of 1 Product Owner, 1 Scrum Master, 6 developers and 4 testers. Our Nexus Integration Team included an Onsite Coordinator (proxy of the PO), Nexus Scrum Master (rotating role), 3 Scrum Masters (each serving 2 Scrum Teams), 2 members from each Development Team, 1 Technical Architect, 1 Test Architect. At the program level, we have Steering Committee including both companies&#39; executives, Technical Governance and PMO to maintain transparency in communication and decision making.&lt;/p&gt;
&lt;p&gt;Each sprint was 2-week duration, we applied Sprint Planning, Daily Scrum for each Scrum team and Nexus Sprint Planning, Nexus Backlog Refinement, Nexus Daily Scrum, Nexus Sprint Review, Nexus Sprint Review at Nexus level.&lt;/p&gt;
&lt;p&gt;We conducted Nexus Backlog Refinement once every week, in which we had representatives from all Development teams and the PO to review the priority product backlog items and dependencies among them. The PO made initial team assignment for the reviewed product backlog items based on the teams&#39; discussion and dependencies. We utilized Google Spreadsheet retrieving data directly from JIRA API to make the planning easier, we could have used &lt;a href=&#34;https://www.atlassian.com/blog/portfolio-for-jira/portfolio-for-jira-3-and-beyond#:~:text=Portfolio%20for%20Jira%20helps%20you,on%20the%20same%20page%20throughout.&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JIRA Portfolio&lt;/a&gt;, but it was more costly.&lt;/p&gt;
&lt;p&gt;In the Nexus Sprint Planning, the Development teams sized the backlog items assigned to them, reviewed the plan in comparison to their availability for the new sprint, discuss with other teams and the PO on their plan before finalizing. There was one important outcome missing: we did not define the Nexus Sprint Goal as we did not see how important it was back then.&lt;/p&gt;
&lt;p&gt;We had Nexus Daily Scrum with representatives from all Development teams to discuss on integration issues, the meeting was very helpful to early identify and address integration challenges, but it was also a pain given a lot of people involved, we tried different approaches to simplify and make these meetings more efficient, eventually we reached to a point when it took less than 1 hour but was not able to reduce it further .&lt;/p&gt;
&lt;p&gt;The team applied GitFlow with feature branches, when a feature was completed (developed and tested), it would be merged into the dev branch and built automatically to a test environment for the PO to early review and feedback. We had some automated end-end regression test suites to validate integrated workflows and 60-80% unit test (branch) coverage for all code, which helped to save some testing time, but given the early stage of the product with ever-changing features and tight deadline, the majority of the testing was done manually including scripted tests and exploratory tests.&lt;/p&gt;
&lt;p&gt;We had weekly PMO meetings to report the progress which was visualized using Sprint burn-down chart and Release burn-down chart. Risks were also raised and monitored in those meetings.&lt;/p&gt;
&lt;p&gt;The Nexus Sprint Review was hosted by the PO, the teams demonstrated what was done, received feedback from the stakeholders, which would be added to the backlog for next sprints. The meeting was recorded and shared across the organization so that everyone was aware of the progress.&lt;/p&gt;
&lt;p&gt;The Teams conducted Nexus Sprint Retrospective together, then Sprint Retro at team&amp;rsquo;s level, feedback/action items were shared among the teams and PO. We applied various practices as Lean Coffee or simple brainstorming on Start/Stop/Continue, sometimes the SMs got creative and asked the teams to do sentimental drawings or arranged team outing to create a comfortable environment to share their ideas.&lt;/p&gt;
&lt;p&gt;Overall, the processes we applied were helpful, we demonstrated well our capability in a fast-pace project and won much more business with this client, our team size grew from 20-ish engineers to more than 100 engineers at some point, but that was not without challenges, I will write more about our lesson learn, especially in release management in the upcoming posts.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
